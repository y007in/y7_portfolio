@import "../scss/variables.scss";

.ProjectSlide {
  @include topcontainer_mobile();
  background-color: $color_lightgray;
  .ProjectSlide_container {
    @include container_mobile();
    .ProjectSlide_Title {
      display: flex;
      flex-direction: column;
      // justify-content: center;
      // align-items: center;
      margin-bottom: 20px;

      div h1 {
        @include title_mobile();
        z-index: 0;
      }
      .moveBtn {
        background-color: $color_point;
        color: $color_white;
        border-radius: 5px;
        border: none;
        padding: 5px 10px;
        margin-left: 15px;
        transition: 0.5s;
        font-size: 14px;

        cursor: pointer;
        &:hover {
          background-color: $color_sub;
        }
      }
      .project_desc {
        color: $color_darkgray;
        font-size: 14px;
      }
    }
    .slide_container {
      overflow: hidden;
      .slide_wrapper {
        display: flex;
        flex-wrap: nowrap;
        padding: 20px 0;
      }
      .slide {
        display: flex;
        align-items: center;
        flex-wrap: nowrap;
        position: relative;

        &.origin {
          animation: 40s linear infinite normal none running infiniteAnimation1;
        }
        &.clone {
          animation: 40s linear infinite infiniteAnimation2;
        }
        &.stop {
          animation-play-state: paused;
        }
        .item {
          box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);
          width: 240px;
          height: 180px;
          border-radius: 5px;
          margin: 0 5px;
          overflow: hidden;
          transition: 0.5s;
          cursor: pointer;
          position: relative;

          img {
            width: 100%;
            height: 100%;
            object-fit: cover;
          }
          &:hover {
            scale: 1.05;
            transition-delay: 0.5;
            transition-duration: 0.3;
            border: 3px solid $color_white;
            &.item::after {
              position: absolute;
              content: "";
              width: 100%;
              height: 100%;
              top: 0;
              left: 0;
              background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.7));
            }
            .item_name {
              position: absolute;
              font-size: 24px;
              bottom: 15px;
              left: 20px;
              color: $color_white;
              z-index: 10;
            }
            .item_skill {
              position: absolute;
              font-size: 14px;
              bottom: 15px;
              right: 20px;
              z-index: 10;
              text-align: right;
              li {
                color: $color_white;
              }
            }
          }
        }
      }
    }
  }
}

@media all and (min-width: 1024px) {
  .ProjectSlide {
    @include topcontainer_pc();
    .ProjectSlide_container {
      @include container_pc();
      .ProjectSlide_Title div h1 {
        @include title_pc();
      }
      .moveBtn {
        padding: 5px 10px;
        margin-left: 10px;
        font-size: 18px;
        cursor: pointer;
        &:hover {
          background-color: $color_sub;
        }
      }
      .project_desc {
        color: $color_darkgray;
        font-size: 16px;
      }
    }
    .slide_container {
      .slide_wrapper {
        padding: 40px 0;
      }
      .slide {
        .item {
          width: 400px;
          height: 300px;
          margin: 0 10px;
          img {
            filter: brightness(100%);
          }
          &:hover img {
            filter: brightness(80%);
          }

          .item_name {
            display: none;
          }
          &:hover .item_name {
            display: block;
          }
        }
      }
    }
  }
}

@keyframes infiniteAnimation1 {
  0% {
    transform: translateX(0%);
  }
  50% {
    transform: translateX(-100%);
  }
  50.1% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0%);
  }
}
@keyframes infiniteAnimation2 {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-200%);
  }
}
